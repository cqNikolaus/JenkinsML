pipeline {
    agent any
    parameters {
        // Datei-Parameter: Beim "Mit Parametern bauen" erscheint ein Upload-Feld.
        base64File(name: 'CSV_FILE', description: 'Bitte die CSV-Datei zum Training hochladen')
        // Optional: Weitere Parameter, z. B. zur Auswahl des Modells
        string(name: 'MODEL_NAME', defaultValue: 'random_forest', description: 'Modellname: random_forest, gradient_boosting, logistic_regression, xgboost')
        string(name: 'DATE_COLUMNS', defaultValue: '', description: 'Optionale, kommagetrennte Liste von Datumsspalten')
    }
    stages {
        stage('Build Docker Image') {
            steps {
                    sh 'docker build -t model-training ./training'
            }
        }
        stage('List workspace') {
            steps {
                withFileParameter('CSV_FILE') {
                    sh 'cp $CSV_FILE test_data.csv'
                    sh 'ls -la'
                }
            }
        }
        stage('Run Training') {
            steps {
                script {
                    def dateColumnsArg = ""
                    if (params.DATE_COLUMNS?.trim()) {
                        dateColumnsArg = "--date_columns ${params.DATE_COLUMNS}"
                    }
                    sh """
                    docker rm -f train-model-container
                    docker create --name train-model-container model-training python train_model.py \\
                    --input_csv test_data.csv \\
                    --model_name ${params.MODEL_NAME} \\
                    ${dateColumnsArg}
                    docker cp jenkins:${env.WORKSPACE}/test_data.csv /tmp/test_data.csv
                    docker cp /tmp/test_data.csv train-model-container:/app/test_data.csv
                    docker start train-model-container

                    docker cp train-model-container:/app/model.pkl /tmp/model.pkl
                    docker cp /tmp/model.pkl jenkins:/var/jenkins_home/workspace/train-model/model.pkl
                    docker rm train-model-container
                    """
                }
            }
        }
    }
}
