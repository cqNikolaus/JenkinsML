pipeline {
  agent any
  stages {
    stage('Build Docker Image') {
      steps {
        sh 'docker build -t train-model ./training'
      }
    }
    stage('Copy artifact') {
      steps {
        copyArtifacts(projectName: 'build-data-extraction');
      }
    }
    stage('Run Container') {
      steps {
        sh 'docker rm -f train-model-run 2>/dev/null || true'
        sh 'docker create --name train-model-run train-model --input_csv /app/build_data.csv'
        sh 'docker cp build_data.csv train-model-run:/app/build_data.csv'
        sh 'docker start -a train-model-run'
        sh 'docker cp train-model-run:/app/model.pkl model.pkl'
        sh 'docker rm train-model-run'
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: 'model.pkl', fingerprint: true
    }
  }
}
