pipeline {
  agent any
  parameters {
    file(name: 'TRAINED_MODEL_FILE', description: 'Das Trainierte Modell (PLK-Datei)')
    base64File(name: 'INPUT_DATA', description: 'CSV-Datei mit den Build-Daten, um die Erfolgswahrscheinlichkeit des n√§chsten Durchlaufs vorherzusagen')
  }
  stages {
    stage('Build Docker Image') {
      steps {
        sh 'docker build -t prediction-image ./prediction'
      }
    }
    stage('Prepare files') {
        steps {
            withFileParameter('INPUT_DATA') {
                sh 'cp $TRAINED_MODEL_FILE model.pkl'
                sh 'cp $INPUT_DATA input_data.csv'
            }
        }
    }
    stage('Run Prediction') {
      steps {
        sh """
        docker create --name prediction-container prediction-image
        docker cp ${env.WORKSPACE}/input_data.csv ${env.WORKSPACE}/model.plk /tmp
        docker cp /tmp/input_data.csv /tmp/model.plk prediction-container:/app
        docker start prediction-container
        docker exec prediction-container python predict.py --model model.plk --data input_data.csv
        docker stop prediction-container
        docker rm prediction-container
        """
      }
    }
  }
}
